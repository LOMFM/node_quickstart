const http        = require('http');
const socketIO    = require('socket.io');
const debug       = require('debug')('myapp:server');
const app = require('../app.js');
var port = process.env.port || '5000'
app.set('port', port);

// Create Http Server
var server = http.createServer(app);
const io = socketIO(server);

// Server Listen
server.listen(port)
server.on('error', onError);
server.on('listening', onListening);

// Socket Config
io.on('connection', (socket) => {
  console.log('socket_id = ', socket.id)
})


function onError(error) {
  if(error.syscall != 'listen') {
    throw error;
  }

  var bind = typeof port == 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
    default:
      throw error;
  }
}
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('App listening on', bind);
  debug('Listening on ' + bind);
}